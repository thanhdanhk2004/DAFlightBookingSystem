<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAC0ASADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwB/OTzQM0uOTSha6DmAE+tPGfWkC04CgLDhmnjPqaaKmiIRstGr
        +zZx+lIY0Dvk04ZpQtOC0rjEwTSgH3p4WnhKVx2IsGl2mpRHTxHS5h2Igpp6qfWnhKeqUrjsMC/WnBTU
        oTjpSiOlcdiPb70FT61MI6Xy6LhYr7TSbT71Z8uk2UXCxW2/WjYasbKAMdh+IouFhsdjcTDMcTkevaia
        xlhHzlfoHBqwLmdU2iQ49DzVdlLEk9aScrjsrFfYR3ppU+tWNlJ5RPSquTYrMpHembT61ZaI4zg49cU3
        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
</value>
  </data>
</root>